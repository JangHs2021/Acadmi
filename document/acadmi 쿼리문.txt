
USE db;

-- CREATE문 & DROP문 --

	-- MEMBERSEQ --
CREATE TABLE MEMBERSEQ (
	YEAR INT,
	MEMBERSEQ BIGINT,
	CONSTRAINT MS_YEAR_PK PRIMARY KEY (YEAR)
);

DROP TABLE MEMBERSEQ;

	-- MEMBER --
CREATE TABLE MEMBER (
	USERNAME VARCHAR(255),
	PASSWORD VARCHAR(255),
	EMAIL VARCHAR(255),
	CATEGORY INT,
	ENABLED INT,
	CONSTRAINT MEMBER_UN_PK PRIMARY KEY (USERNAME)
);

DROP TABLE MEMBER;

	-- MEMBERFILES --
CREATE TABLE MEMBERFILES (
	FILENUM BIGINT AUTO_INCREMENT,
	USERNAME VARCHAR(255),
	FILENAME VARCHAR(255),
	ORINAME VARCHAR(255),
	CONSTRAINT MF_FN_PK PRIMARY KEY (FILENUM)
);

DROP TABLE MEMBERFILES;

	-- COLLEGE --
CREATE TABLE COLLEGE (
	COLLEGENUM BIGINT AUTO_INCREMENT,
	COLLEGENAME VARCHAR(255),
	BUILDING VARCHAR(255),
	CONSTRAINT COLLEGE_CN_PK PRIMARY KEY (COLLEGENUM)
);

DROP TABLE COLLEGE;

	-- DEPARTRMENT --
CREATE TABLE DEPARTMENT (
	DEPTNUM INT,
	COLLEGENUM BIGINT,
	DEPTNAME VARCHAR(255),
	STATUS INT,
	CONSTRAINT DEPARTMENT_DN_PK PRIMARY KEY (DEPTNUM)
);

DROP TABLE DEPARTMENT;

	-- MEMBER_ROLE --
CREATE TABLE MEMBER_ROLE (
	USERNAME VARCHAR(255),
	ROLENUM	INT,
	CONSTRAINT MR_PK PRIMARY KEY (USERNAME, ROLENUM)
);

DROP TABLE MEMBER_ROLE

	-- ROLE --
CREATE TABLE ROLE (
	ROLENUM INT,
	ROLENAME VARCHAR(255),
	CONSTRAINT ROLE_RN_PK PRIMARY KEY (ROLENUM)
);

DROP TABLE ROLE;

	-- NOTIFICATION --
CREATE TABLE NOTIFICATION (
	NOTIFICATIONNUM BIGINT AUTO_INCREMENT,
	RECIPIENT VARCHAR(255),
	NOTIFICATIONMSG	TEXT,
	NOTIFICATIONDATE DATETIME,
	NOTIFICATIONSTATUS INT,
	NOTIFICATIONKIND INT,
	NUM BIGINT,
	LECTURENUM BIGINT,
	CONSTRAINT NOTIFICATION_NN_PK PRIMARY KEY (NOTIFICATIONNUM)
);

DROP TABLE NOTIFICATION;

	-- CHAT_MESSAGE --
CREATE TABLE CHAT_MESSAGE (
	MSGNUM BIGINT AUTO_INCREMENT,
	MSGSENDER VARCHAR(255),
	MSGRECIPIENT VARCHAR(255),
	MSGCONTENTS TEXT,
	MSGDATE DATETIME,
	MSGSTATUS INT,
	CHATNUM BIGINT,
	CONSTRAINT CM_MN_PK PRIMARY KEY (MSGNUM)
);

DROP TABLE CHAT_MESSAGE;

	-- CHAT_ROOM --
CREATE TABLE CHAT_ROOM (
	CHATNUM BIGINT AUTO_INCREMENT,
	ROOMSENDER VARCHAR(255),
	ROOMRECIPIENT VARCHAR(255),
	SENDERNAME VARCHAR(255),
	RECIPIENTNAME VARCHAR(255),
	CHATSTATUS INT,
	CONSTRAINT CR_CN_PK PRIMARY KEY (CHATNUM)
); 

DROP TABLE CHAT_ROOM;

	-- CHATFILES --
CREATE TABLE CHATFILES (
	CHATFILENUM BIGINT AUTO_INCREMENT,
	MSGNUM BIGINT,
	FILENAME VARCHAR(255),
	ORINAME VARCHAR(255),
	CONSTRAINT CF_FN_PK PRIMARY KEY (CHATFILENUM)
);

DROP TABLE CHATFILES;

	-- ADMINISTRATOR --
CREATE TABLE ADMINISTRATOR (
	USERNAME VARCHAR(255),
	DEPTNUM INT,
	NAME VARCHAR(255),
	PHONE VARCHAR(255),
	BIRTH DATE,
	ADDRESS VARCHAR(255),
	ADDRESSDETAIL VARCHAR(255),
	STATUS INT,
	CONSTRAINT ADMINISTRATION_UN_PK PRIMARY KEY (USERNAME)
);

DROP TABLE ADMINISTRATOR;

	-- NOTICE --
CREATE TABLE NOTICE (
	NUM BIGINT AUTO_INCREMENT,
	TITLE VARCHAR(255),
	WRITER VARCHAR(255),
	IMPORTANT INT,
	CONTENTS TEXT,
	HIT INT,
	REGDATE DATETIME,
	MODIFYDATE DATETIME,
	CONSTRAINT NOTICE_NUM_PK PRIMARY KEY (NUM)
);

DROP TABLE NOTICE;

	-- NOTICEFILES --
CREATE TABLE NOTICEFILES (
	FILENUM BIGINT AUTO_INCREMENT,
	NUM BIGINT,
	FILENAME VARCHAR(255),
	ORINAME VARCHAR(255),
	CONSTRAINT NF_FN_PK PRIMARY KEY (FILENUM)
);

DROP TABLE NOTICEFILES;

	-- QNA --
CREATE TABLE QNA (
	NUM BIGINT AUTO_INCREMENT,
	TITLE VARCHAR(255),
	WRITER VARCHAR(255),
	CONTENTS TEXT,
	REGDATE DATETIME,
	REF INT,
	STEP INT,
	DEPTH INT,
	CONSTRAINT QNA_NUM_PK PRIMARY KEY (NUM)
);

DROP TABLE QNA;

	-- QNAFILES --
CREATE TABLE QNAFILES (
	FILENUM BIGINT AUTO_INCREMENT,
	NUM BIGINT,
	FILENAME VARCHAR(255),
	ORINAME VARCHAR(255),
	CONSTRAINT QF_FN_PK PRIMARY KEY (FILENUM)
);

DROP TABLE QNAFILES;

	-- PROFESSOR --
CREATE TABLE PROFESSOR (
	USERNAME VARCHAR(255),
	DEPTNUM INT,
	NAME VARCHAR(255),
	PROFESSORROOM VARCHAR(255),
	PHONE VARCHAR(255),
	BIRTH DATE,
	ADDRESS VARCHAR(255),
	ADDRESSDETAIL VARCHAR(255),
	STATUS INT,
	CONSTRAINT PROFESSOR_UN_PK PRIMARY KEY (USERNAME)
);

DROP TABLE PROFESSOR;

	-- LECTURE --
CREATE TABLE LECTURE (
	LECTURENUM BIGINT AUTO_INCREMENT,
	USERNAME VARCHAR(255),
	LECTURENAME VARCHAR(255),
	SEMESTER INT,
	CATEGORY VARCHAR(255),
	LECTUREBUILDING VARCHAR(255),
	LECTUREROOM INT,
	DEPTNUM INT,
	GRADE INT,
	SUBSCRIPTION INT,
	PERSONAL INT,
	YEAR INT,
	WEEKDAY VARCHAR(255),
	STARTTIME INT,
	ENDTIME INT,
	COMPLETIONGRADE INT,
	STATUS INT,
	TEMPORARY INT,
	FAVORITE INT,	
	CONSTRAINT LECTURE_LN_PK PRIMARY KEY (LECTURENUM)
);

DROP TABLE LECTURE;

	-- PERIOD --
CREATE TABLE PERIOD (
	YEAR INT,
	SEMESTER INT,
	APPLICATIONSTART DATETIME,
	APPLICATIONEND DATETIME,
	FAVORITESTART DATETIME,
	FAVORITEEND DATETIME,
	REGISTRATIONSTART DATETIME,
	DEADLINE DATETIME,
	CONSTRAINT PERIOD_PK PRIMARY KEY (YEAR, SEMESTER)
);

DROP TABLE PERIOD;

	-- LECTURE_ROOM --
CREATE TABLE LECTURE_ROOM (
	LECTUREBUILDING VARCHAR(255),
	LECTUREROOM INT,
	PERSONAL INT,
	STATUS INT,
	CONSTRAINT LR_PK PRIMARY KEY (LECTUREBUILDING, LECTUREROOM)
);

DROP TABLE LECTURE_ROOM;

	-- TIMEINFO --
CREATE TABLE TIMEINFO (
   TIMENUM BIGINT AUTO_INCREMENT,
   STARTTIME INT,
   ENDTIME INT,
   CONSTRAINT TIMEINFO_PK PRIMARY KEY (TIMENUM)
);

DROP TABLE TIMEINFO;

	-- TIMETABLE --
CREATE TABLE TIMETABLE (
   TIMETABLENUM BIGINT AUTO_INCREMENT,
   LECTUREBUILDING VARCHAR(255),
   LECTUREROOM INT,
   WEEKDAY VARCHAR(255),
   TIMENUM BIGINT,
   YEAR INT,
   SEMESTER INT,
   CONSTRAINT TIMETABLE_PK PRIMARY KEY (TIMETABLENUM)
);

DROP TABLE TIMETABLE;

	-- LECTURE_NOTICE --
CREATE TABLE LECTURE_NOTICE (
	NUM BIGINT AUTO_INCREMENT,
	LECTURENUM BIGINT,
	TITLE VARCHAR(255),
	WRITER VARCHAR(255),
	CONTENTS TEXT,
	HIT INT,
	REGDATE DATETIME,
	MODIFYDATE DATETIME,
	CONSTRAINT LN_NUM_PK PRIMARY KEY (NUM)
);

DROP TABLE LECTURE_NOTICE;

	-- LECTURE_NOTICEFILES
CREATE TABLE LECTURE_NOTICEFILES (
	FILENUM BIGINT AUTO_INCREMENT,
	NUM BIGINT,
	FILENAME VARCHAR(255),
	ORINAME VARCHAR(255),
	CONSTRAINT LNF_FN_PK PRIMARY KEY (FILENUM)
);

DROP TABLE LECTURE_NOTICEFILES;

	-- LECTURE_QNA --
CREATE TABLE LECTURE_QNA (
	NUM BIGINT AUTO_INCREMENT,
	LECTURENUM BIGINT,
	TITLE VARCHAR(255),
	WRITER VARCHAR(255),
	CONTENTS TEXT,
	REGDATE DATETIME,
	SECRET INT,
	REF INT,
	STEP INT,
	DEPTH INT,
	CONSTRAINT LQ_NUM_PK PRIMARY KEY (NUM)
);

DROP TABLE LECTURE_QNA;

	-- LECTURE_QNAFILES --
CREATE TABLE LECTURE_QNAFILES (
	FILENUM BIGINT AUTO_INCREMENT,
	NUM BIGINT,
	FILENAME VARCHAR(255),
	ORINAME VARCHAR(255),
	CONSTRAINT LQF_FN_PK PRIMARY KEY (FILENUM)
);

DROP TABLE LECTURE_QNAFILES;

	-- SYLLABUS --
CREATE TABLE SYLLABUS (
	SYLLABUSNUM BIGINT AUTO_INCREMENT,
	LECTURENUM BIGINT,
	CURRICULUMOUTLINE TEXT,
	GOAL TEXT,
	EVALUATION TEXT,
	METHOD TEXT,
	BOOKNAME VARCHAR(255),
	BOOKAUTHOR VARCHAR(255),
	BOOKPUBLISHER VARCHAR(255),
	BOOKPUBLICATIONDATE VARCHAR(255),
	BOOKISBN VARCHAR(255),
	BOOKNOTE TEXT,
	CONSTRAINT SYLLABUS_SN_PK PRIMARY KEY (SYLLABUSNUM)
);

DROP TABLE SYLLABUS;

	-- CALSS --
CREATE TABLE CLASS (
	SYLLABUSNUM BIGINT,
	`ORDER` INT,
	SUBJECT TEXT,
	GOAL TEXT,
	CAPABILITY TEXT,
	NOTE TEXT,
	CONSTRAINT CLASS_PK PRIMARY KEY (SYLLABUSNUM, `ORDER`)
);

DROP TABLE CLASS;

	-- REPORT_REGISTRATION --
CREATE TABLE REPORT_REGISTRATION (
	REGISTRATIONNUM BIGINT AUTO_INCREMENT,
	SYLLABUSNUM BIGINT,
	`ORDER` INT,
	REPORTNAME VARCHAR(255),
	CONTENTS TEXT,
	STARTDATE DATETIME,
	SUBMISSIONDATE DATETIME,
	CONSTRAINT RR_RN_PK PRIMARY KEY (REGISTRATIONNUM)
);

DROP TABLE REPORT_REGISTRATION;

	-- STUDENT --
CREATE TABLE STUDENT (
	USERNAME VARCHAR(255),
	DEPTNUM INT,
	GRADE INT,
	NAME VARCHAR(255),
	PHONE VARCHAR(255),
	BIRTH DATE,
	ADDRESS VARCHAR(255),
	ADDRESSDETAIL VARCHAR(255),
	STATUS INT,
	CONSTRAINT STUDENT_UN_PK PRIMARY KEY (USERNAME)
);

DROP TABLE STUDENT;

	-- CREDIT --
CREATE TABLE CREDIT (
	CREDITNUM BIGINT AUTO_INCREMENT,
	LECTURENUM BIGINT,
	USERNAME VARCHAR(255),
	SEMIGRADE INT,
	FINALGRADE INT,
	REPORTGRADE INT,
	ATTENDANCE INT,
	CREDIT FLOAT,
	CONSTRAINT CREDIT_CN_PK PRIMARY KEY (CREDITNUM)
);

DROP TABLE CREDIT;

	-- STUDENT_LECTURE --
CREATE TABLE STUDENT_LECTURE (
	LECTURENUM BIGINT,
	USERNAME VARCHAR(255),
	YEAR INT,
	SEMESTER INT,
	CREDIT INT,
	CONSTRAINT SL_PK PRIMARY KEY (LECTURENUM, USERNAME)
);

DROP TABLE STUDENT_LECTURE;

	-- FAVORITE_LECTURE --
CREATE TABLE FAVORITE_LECTURE (
	FAVORITENUM BIGINT AUTO_INCREMENT,
	LECTURENUM BIGINT,
	USERNAME VARCHAR(255),
	YEAR INT,
	SEMESTER INT,
	CONSTRAINT FL_FN_PK PRIMARY KEY (FAVORITENUM)
);

DROP TABLE FAVORITE_LECTURE;

	-- REPORT --
CREATE TABLE REPORT (
	REPORTNUM BIGINT AUTO_INCREMENT,
	REGISTRATIONNUM BIGINT,
	USERNAME VARCHAR(255),
	CONTENTS TEXT,
	SCORE FLOAT,
	GRADING INT,
	SUBMISSIONDATE DATETIME,
	CONSTRAINT REPORT_RN_PK PRIMARY KEY (REPORTNUM)
);

DROP TABLE REPORT;

	-- REPORTFILES --
CREATE TABLE REPORTFILES (
	FILENUM BIGINT AUTO_INCREMENT,
	REPORTNUM BIGINT,
	FILENAME VARCHAR(255),
	ORINAME VARCHAR(255),
	CONSTRAINT RF_FN_PK PRIMARY KEY (FILENUM)
);

DROP TABLE REPORTFILES;

-- ALTER FK(외래키) --

	-- MEMBERFILES --
ALTER TABLE MEMBERFILES ADD CONSTRAINT MF_UN_FK FOREIGN KEY (USERNAME)
REFERENCES MEMBER (USERNAME) ON DELETE CASCADE ON UPDATE CASCADE;

	-- DEPARTMENT --
ALTER TABLE DEPARTMENT ADD CONSTRAINT DEPARTMENT_CN_FK FOREIGN KEY (COLLEGENUM)
REFERENCES COLLEGE (COLLEGENUM) ON DELETE CASCADE ON UPDATE CASCADE;

	-- MEMBER_ROLE --
ALTER TABLE MEMBER_ROLE ADD CONSTRAINT MR_UN_FK FOREIGN KEY (USERNAME)
REFERENCES MEMBER (USERNAME) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE MEMBER_ROLE ADD CONSTRAINT MR_RN_FK FOREIGN KEY (ROLENUM)
REFERENCES ROLE (ROLENUM) ON DELETE CASCADE ON UPDATE CASCADE;

	-- NOTIFICATION --
ALTER TABLE NOTIFICATION ADD CONSTRAINT NOTIFICATION_RECIPIENT_FK FOREIGN KEY (RECIPIENT)
REFERENCES MEMBER (USERNAME) ON DELETE CASCADE ON UPDATE CASCADE

	-- CHAT_ROOM --
ALTER TABLE CHAT_ROOM ADD CONSTRAINT CR_SENDER_FK FOREIGN KEY (ROOMSENDER)
REFERENCES MEMBER (USERNAME) ON DELETE CASCADE ON UPDATE CASCADE

ALTER TABLE CHAT_ROOM ADD CONSTRAINT CR_RECIPIENT_FK FOREIGN KEY (ROOMRECIPIENT)
REFERENCES MEMBER (USERNAME) ON DELETE CASCADE ON UPDATE CASCADE

	-- CAHT_MESSAGE --
ALTER TABLE CHAT_MESSAGE ADD CONSTRAINT CM_SENDER_FK FOREIGN KEY (MSGSENDER)
REFERENCES MEMBER (USERNAME) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE CHAT_MESSAGE ADD CONSTRAINT CM_RECIPIENT_FK FOREIGN KEY (MSGRECIPIENT)
REFERENCES MEMBER (USERNAME) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE CHAT_MESSAGE ADD CONSTRAINT CM_CN_FK FOREIGN KEY (CHATNUM)
REFERENCES CHAT_ROOM (CHATNUM) ON DELETE CASCADE ON UPDATE CASCADE;

	-- CHATFILES --
ALTER TABLE CHATFILES ADD CONSTRAINT CF_MN_FK FOREIGN KEY (MSGNUM)
REFERENCES CHAT_MESSAGE (MSGNUM) ON DELETE CASCADE ON UPDATE CASCADE;

	-- ADMINISTRATOR --
ALTER TABLE ADMINISTRATOR ADD CONSTRAINT ADMINISTRATOR_UN_FK FOREIGN KEY (USERNAME)
REFERENCES MEMBER (USERNAME) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE ADMINISTRATOR ADD CONSTRAINT ADMINISTRATOR_DN_FK FOREIGN KEY (DEPTNUM)
REFERENCES DEPARTMENT (DEPTNUM) ON DELETE CASCADE ON UPDATE CASCADE;

	-- NOTICE --
ALTER TABLE NOTICE ADD CONSTRAINT NOTICE_WRITER_FK FOREIGN KEY (WRITER)
REFERENCES ADMINISTRATOR (USERNAME) ON DELETE CASCADE ON UPDATE CASCADE;

	-- NOTICEFILES --
ALTER TABLE NOTICEFILES ADD CONSTRAINT NF_NUM_FK FOREIGN KEY (NUM)
REFERENCES NOTICE (NUM) ON DELETE CASCADE ON UPDATE CASCADE;

	-- QNA --
ALTER TABLE QNA ADD CONSTRAINT QNA_WRITER_FK FOREIGN KEY (WRITER)
REFERENCES MEMBER (USERNAME) ON DELETE CASCADE ON UPDATE CASCADE;

	-- QNAFILES --
ALTER TABLE QNAFILES ADD CONSTRAINT QF_NUM_FK FOREIGN KEY (NUM)
REFERENCES QNA (NUM) ON DELETE CASCADE ON UPDATE CASCADE;

	-- PROFESSOR --
ALTER TABLE PROFESSOR ADD CONSTRAINT PROFESSOR_UN_FK FOREIGN KEY (USERNAME)
REFERENCES MEMBER (USERNAME) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE PROFESSOR ADD CONSTRAINT PROFESSOR_DN_FK FOREIGN KEY (DEPTNUM)
REFERENCES DEPARTMENT (DEPTNUM) ON DELETE CASCADE ON UPDATE CASCADE;

	-- LECTURE --
ALTER TABLE LECTURE ADD CONSTRAINT LECTURE_UN_FK FOREIGN KEY (USERNAME)
REFERENCES PROFESSOR (USERNAME) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE LECTURE ADD CONSTRAINT LECTURE_PERIOD_FK FOREIGN KEY (YEAR, SEMESTER)
REFERENCES PERIOD (YEAR, SEMESTER) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE LECTURE ADD CONSTRAINT LECTURE_LR_FK FOREIGN KEY (LECTUREBUILDING, LECTUREROOM)
REFERENCES LECTURE_ROOM (LECTUREBUILDING, LECTUREROOM) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE LECTURE ADD CONSTRAINT LECTURE_DN_FK FOREIGN KEY (DEPTNUM)
REFERENCES DEPARTMENT (DEPTNUM) ON DELETE CASCADE ON UPDATE CASCADE;

	-- TIMETABLE --
ALTER TABLE TIMETABLE  ADD CONSTRAINT TT_LR_FK FOREIGN KEY (LECTUREBUILDING, LECTUREROOM)
REFERENCES LECTURE_ROOM (LECTUREBUILDING, LECTUREROOM) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE TIMETABLE  ADD CONSTRAINT TT_TN_FK FOREIGN KEY (TIMENUM)
REFERENCES TIMEINFO (TIMENUM) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE TIMETABLE ADD CONSTRAINT TT_YEAR_FK FOREIGN KEY (YEAR, SEMESTER)
REFERENCES PERIOD (YEAR, SEMESTER) ON DELETE CASCADE ON UPDATE CASCADE;

	-- LECTURE_NOTICE --
ALTER TABLE LECTURE_NOTICE ADD CONSTRAINT LN_LN_FK FOREIGN KEY (LECTURENUM)
REFERENCES LECTURE (LECTURENUM) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE LECTURE_NOTICE ADD CONSTRAINT LN_WRITER_FK FOREIGN KEY (WRITER)
REFERENCES PROFESSOR (USERNAME) ON DELETE CASCADE ON UPDATE CASCADE;

	-- LECTURE_NOTICEFILES --
ALTER TABLE LECTURE_NOTICEFILES ADD CONSTRAINT LNF_NUM_FK FOREIGN KEY (NUM)
REFERENCES LECTURE_NOTICE (NUM) ON DELETE CASCADE ON UPDATE CASCADE;

	-- LECTURE_QNA --
ALTER TABLE LECTURE_QNA ADD CONSTRAINT LQ_LN_FK FOREIGN KEY (LECTURENUM)
REFERENCES LECTURE (LECTURENUM) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE LECTURE_QNA ADD CONSTRAINT LQ_WRITER_FK FOREIGN KEY (WRITER)
REFERENCES MEMBER (USERNAME) ON DELETE CASCADE ON UPDATE CASCADE;

	-- LECTURE_QNAFILES --
ALTER TABLE LECTURE_QNAFILES ADD CONSTRAINT LQF_NUM_FK FOREIGN KEY (NUM)
REFERENCES LECTURE_QNA (NUM) ON DELETE CASCADE ON UPDATE CASCADE;

	-- SYLLABUS --
ALTER TABLE SYLLABUS ADD CONSTRAINT SYLLABUS_LN_FK FOREIGN KEY (LECTURENUM)
REFERENCES LECTURE (LECTURENUM) ON DELETE CASCADE ON UPDATE CASCADE;

	-- CLASS
ALTER TABLE CLASS ADD CONSTRAINT CLASS_SN_FK FOREIGN KEY (SYLLABUSNUM)
REFERENCES SYLLABUS (SYLLABUSNUM) ON DELETE CASCADE ON UPDATE CASCADE;

	-- REPORT_REGISTRATION --
ALTER TABLE REPORT_REGISTRATION ADD CONSTRAINT RR_CLASS_FK FOREIGN KEY (SYLLABUSNUM, `ORDER`)
REFERENCES CLASS (SYLLABUSNUM, `ORDER`) ON DELETE CASCADE ON UPDATE CASCADE;

	-- STUDENT --
ALTER TABLE STUDENT ADD CONSTRAINT STUDENT_UN_FK FOREIGN KEY (USERNAME)
REFERENCES MEMBER (USERNAME) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE STUDENT ADD CONSTRAINT STUDENT_DN_FK FOREIGN KEY (DEPTNUM)
REFERENCES DEPARTMENT (DEPTNUM) ON DELETE CASCADE ON UPDATE CASCADE;

	-- CREDIT --
ALTER TABLE CREDIT ADD CONSTRAINT CREDIT_LN_FK FOREIGN KEY (LECTURENUM)
REFERENCES STUDENT_LECTURE (LECTURENUM) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE CREDIT ADD CONSTRAINT CREDIT_UN_FK FOREIGN KEY (USERNAME)
REFERENCES STUDENT (USERNAME) ON DELETE CASCADE ON UPDATE CASCADE;

	-- STUDENT_LECTURE --
ALTER TABLE STUDENT_LECTURE ADD CONSTRAINT SL_LN_FK FOREIGN KEY (LECTURENUM)
REFERENCES LECTURE (LECTURENUM) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE STUDENT_LECTURE ADD CONSTRAINT SL_PERIOD_FK FOREIGN KEY (YEAR, SEMESTER)
REFERENCES PERIOD (YEAR, SEMESTER) ON DELETE CASCADE ON UPDATE CASCADE


ALTER TABLE STUDENT_LECTURE ADD CONSTRAINT SL_UN_FK FOREIGN KEY (USERNAME)
REFERENCES STUDENT (USERNAME) ON DELETE CASCADE ON UPDATE CASCADE;

	-- FAVORITE_LECTURE --
ALTER TABLE FAVORITE_LECTURE ADD CONSTRAINT FL_LN_FK FOREIGN KEY (LECTURENUM)
REFERENCES LECTURE (LECTURENUM) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE FAVORITE_LECTURE ADD CONSTRAINT FL_UN_FK FOREIGN KEY (USERNAME)
REFERENCES STUDENT (USERNAME) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE FAVORITE_LECTURE ADD CONSTRAINT FL_PERIOD_FK FOREIGN KEY (YEAR, SEMESTER)
REFERENCES PERIOD (YEAR, SEMESTER) ON DELETE CASCADE ON UPDATE CASCADE;

	-- REPORT --
ALTER TABLE REPORT ADD CONSTRAINT REPORT_RN_FK FOREIGN KEY (REGISTRATIONNUM)
REFERENCES REPORT_REGISTRATION (REGISTRATIONNUM) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE REPORT ADD CONSTRAINT REPORT_UN_FK FOREIGN KEY (USERNAME)
REFERENCES STUDENT (USERNAME) ON DELETE CASCADE ON UPDATE CASCADE;

	-- REPROTFILES --
ALTER TABLE REPORTFILES ADD CONSTRAINT RF_RN_FK FOREIGN KEY (REPORTNUM)
REFERENCES REPORT (REPORTNUM) ON DELETE CASCADE ON UPDATE CASCADE;

-- Data --

INSERT INTO ROLE VALUES (0, 'ROLE_ADMIN');
INSERT INTO ROLE VALUES (1, 'ROLE_ADMINISTRATOR');
INSERT INTO ROLE VALUES (2, 'ROLE_PROFESSOR');
INSERT INTO ROLE VALUES (3, 'ROLE_STUDENT');

INSERT INTO MEMBER VALUES ('master', 123, 'master@gmail.com', 0, 1)

INSERT INTO MEMBER_ROLE VALUES('master', 0);

SELECT * FROM COLLEGE c ;
INSERT INTO COLLEGE VALUES(1,'행정','행정');
INSERT INTO COLLEGE VALUES(2,'교양대학','교양관');
INSERT INTO COLLEGE VALUES(3,'인문대학','인문관');
INSERT INTO COLLEGE VALUES(4,'자연과학대학','자연관');
INSERT INTO COLLEGE VALUES(5,'정보대학','정보관');
INSERT INTO COLLEGE VALUES(6,'공과대학','공학관');
INSERT INTO COLLEGE VALUES(7,'예술체육대학','예술관');


SELECT * FROM DEPARTMENT d ;
INSERT INTO DEPARTMENT VALUES(1,1,'행정',1);
INSERT INTO DEPARTMENT VALUES(2,2,'교양학부',1);
INSERT INTO DEPARTMENT VALUES(3,3,'국어국문학과',1);
INSERT INTO DEPARTMENT VALUES(4,3,'영어영문학과',1);
INSERT INTO DEPARTMENT VALUES(5,3,'일어일문학과',1);
INSERT INTO DEPARTMENT VALUES(6,4,'수학과',1);
INSERT INTO DEPARTMENT VALUES(7,4,'화학과',1);
INSERT INTO DEPARTMENT VALUES(8,4,'물리학과',1);
INSERT INTO DEPARTMENT VALUES(9,5,'정보통신학과',1);
INSERT INTO DEPARTMENT VALUES(10,5,'임베디드시스템공학과',1);
INSERT INTO DEPARTMENT VALUES(11,5,'컴퓨터공학과',1);
INSERT INTO DEPARTMENT VALUES(12,6,'전기공학과',1);
INSERT INTO DEPARTMENT VALUES(13,6,'전자공학과',1);
INSERT INTO DEPARTMENT VALUES(14,6,'신소재공학과',1);
INSERT INTO DEPARTMENT VALUES(15,7,'디자인학부',1);
INSERT INTO DEPARTMENT VALUES(16,7,'체육학부',1);
INSERT INTO DEPARTMENT VALUES(17,7,'공연예술학과',1);

SELECT * FROM LECTURE_ROOM ;	
INSERT INTO LECTURE_ROOM VALUES('교양관',101,20,1);
INSERT INTO LECTURE_ROOM VALUES('교양관',202,30,1);
INSERT INTO LECTURE_ROOM VALUES('교양관',303,40,1);
INSERT INTO LECTURE_ROOM VALUES('인문관',101,20,1);
INSERT INTO LECTURE_ROOM VALUES('인문관',102,40,1);
INSERT INTO LECTURE_ROOM VALUES('인문관',103,30,1);
INSERT INTO LECTURE_ROOM VALUES('자연관',201,20,1);
INSERT INTO LECTURE_ROOM VALUES('자연관',301,30,1);
INSERT INTO LECTURE_ROOM VALUES('자연관',501,40,1);
INSERT INTO LECTURE_ROOM VALUES('정보관',402,40,1);
INSERT INTO LECTURE_ROOM VALUES('정보관',405,40,1);
INSERT INTO LECTURE_ROOM VALUES('정보관',403,40,1);
INSERT INTO LECTURE_ROOM VALUES('공학관',305,30,1);
INSERT INTO LECTURE_ROOM VALUES('공학관',301,20,1);
INSERT INTO LECTURE_ROOM VALUES('공학관',302,40,1);
INSERT INTO LECTURE_ROOM VALUES('예술관',103,50,1);
INSERT INTO LECTURE_ROOM VALUES('예술관',201,20,1);
INSERT INTO LECTURE_ROOM VALUES('예술관',403,50,1);


ROLLBACK;

COMMIT;