<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.acadmi.administrator.AdministratorDAO">
  
 
    <!--회원 관리  -->
    
    <!--아이디  -->
    <update id="setUpdateSeq" parameterType="MemberSeqVO">
   		<selectKey keyProperty="memberSeq" resultType="Long" order="BEFORE">
      SELECT MEMBERSEQ+1 FROM MEMBERSEQ
      WHERE YEAR =#{year}
   		</selectKey>
     UPDATE MEMBERSEQ SET MEMBERSEQ = #{memberSeq} WHERE YEAR = #{year}
	</update>
	<select id="getYearSeq" resultType="Long" parameterType="MemberSeqVO">
		SELECT YEAR FROM MEMBERSEQ
		WHERE YEAR=#{year}
	</select>
	<select id="getMemberSeq" resultType="Long" parameterType="MemberSeqVO">
		SELECT MEMBERSEQ FROM MEMBERSEQ
		WHERE YEAR=#{year}
	</select>
	
	<insert id="setInsertSeq" parameterType="MemberSeqVO">
		INSERT INTO MEMBERSEQ
		VALUES(#{year},1)
	</insert>
	<select id="getCollege" resultType="CollegeVO">
		SELECT * FROM COLLEGE
	</select>
	<select id="getDepartment" resultType="DepartmentVO">
		SELECT * FROM DEPARTMENT
	</select>
	
	
	
	
  	<!--계정 생성  -->
  	<insert id="setMemberAdd" parameterType="MemberVO" useGeneratedKeys="true" keyProperty="username">
  		INSERT INTO MEMBER
  		VALUES(#{username},#{password},#{email},#{category},1)
  	</insert>
  	<insert id="setStudentAdd" parameterType="StudentVO" >
  		INSERT INTO STUDENT
  		VALUES(#{username},#{deptNum},#{grade},#{name},#{phone},#{birth},#{address},0)
  	</insert>
  	<insert id="setAdministratorAdd" parameterType="AdministratorVO">
  		INSERT INTO ADMINISTRATOR
  		VALUES(#{username},#{deptNum},#{name},#{phone},#{birth},#{address},0)
  	</insert>
  	<insert id="setProfessorAdd" parameterType="ProfessorVO">
  		INSERT INTO PROFESSOR
  		VALUES(#{username},#{deptNum},#{name},#{professorRoom},#{phone},#{birth},#{address},0)
  	</insert>
  	<insert id="setRoleAdd" parameterType="Map">
  			INSERT INTO MEMBER_ROLE
	  		VALUES(#{username}, #{roleNum})
  	</insert>
  	
	 <!-- 회원 조회 -->
  	
  	
  	<select id="getTotalCountProfessor" resultType="Long">
  		SELECT COUNT(USERNAME) FROM PROFESSOR
  	</select>
  	
  	<select id="getTotalCountStudent" resultType="Long">
  		SELECT COUNT(USERNAME) FROM STUDENT
  	</select>
  	<select id="getTotalCountAdministrator" resultType="Long">
  		SELECT COUNT(USERNAME) FROM ADMINISTRATOR
  	</select>
  
  	<select id="getStudentList" parameterType="Pagination" resultMap="StudentList">
  		SELECT * FROM MEMBER M
		LEFT OUTER JOIN
			MEMBERFILES MF
		USING(USERNAME)
			INNER JOIN
				STUDENT S 
			USING(USERNAME)
				INNER JOIN
					DEPARTMENT D 
				USING(DEPTNUM)
					INNER JOIN 
						COLLEGE C 
					USING(COLLEGENUM)
				WHERE CATEGORY=2
		LIMIT #{startRow},#{perPage}					
  	</select>
  	<resultMap type="CollegeVO" id="StudentList">
  		<id column="COLLEGENUM" property="collegeNum"/>
  		<result column="COLLEGENAME" property="collegeName"/>
  		<collection property="departmentVOs" javaType="List" ofType="DepartmentVO">
  			<id column="DEPTNUM" property="deptNum"/>
  			<result column="DEPTNAME" property="deptName"/>
  			<collection property="studentVOs" javaType="List" ofType="StudentVO">
  				<id column="USERNAME" property="username"/>
  				<result column="GRADE" property="grade"/>
  				<result column="NAME" property="name"/>
  				<result column="PHONE" property="phone"/>
  				<result column="STATUS" property="status"/>
  				<association property="memberFilesVO" javaType="MemberFilesVO">
  					<id column="FILENUM" property="fileNum"/>
  					<result column="FILENAME" property="fileName"/>
  					<result column="ORINAME" property="oriName"/>
  				</association>
  			</collection>
  		</collection>
  	</resultMap>
  	
  	<select id="getProfessorList" resultMap="ProfessorList">
  		SELECT * FROM MEMBER M
		LEFT OUTER JOIN
			MEMBERFILES MF 
		USING(USERNAME)
			INNER JOIN
				PROFESSOR P 
		USING(USERNAME)
				INNER JOIN 
					DEPARTMENT D 
				USING(DEPTNUM)
					INNER JOIN
						COLLEGE C
					USING(COLLEGENUM)
		WHERE CATEGORY=1			
		LIMIT #{startRow},#{perPage}			
  	</select>
  	<resultMap type="CollegeVO" id="ProfessorList">
  		<id column="COLLEGENUM" property="collegeNum"/>
  		<result column="COLLEGENAME" property="collegeName"/>
  		<result column="BUILDING" property="building"/>
  		<collection property="departmentVOs" javaType="List" ofType="DepartmentVO">
  			<id column="DEPTNUM" property="deptNum"/>
  			<result column="DEPTNAME" property="deptName"/>
  			<collection property="professorVOs" javaType="List" ofType="ProfessorVO">
  				<id column="USERNAME" property="username"/>
  				<result column="NAME" property="name"/>
  				<result column="EMAIL" property="email"/>
  				<result column="PHONE" property="phone"/>
  				<result column="PROFESSORROOM" property="professorRoom"/>
  				<result column="STATUS" property="status"/>
  				<association property="memberFilesVO" javaType="MemberFilesVO">
  					<id column="FILENUM" property="fileNum"/>
  					<result column="FILENAME" property="fileName"/>
  					<result column="ORINAME" property="oriName"/>
  				</association>
  			</collection>
  		</collection>
  	</resultMap>
  
  <select id="getAdministratorList" resultMap="AdminIstratorList">
  	SELECT * FROM MEMBER M
		LEFT OUTER JOIN
			MEMBERFILES MF 
		USING(USERNAME)
			INNER JOIN
				ADMINISTRATOR A
			USING(USERNAME)
				INNER JOIN 
					DEPARTMENT D 
				USING(DEPTNUM)
	WHERE CATEGORY=0			
	LIMIT #{startRow},#{perPage}			
  </select>
  
  <resultMap type="DepartmentVO" id="AdminIstratorList">
  	<id column="DEPTNUM" property="deptNum"/>
  	<result column="DEPTNAME" property="deptName"/>
		<collection property="administratorVOs" javaType="List" ofType="AdministratorVO">
			<id column="USERNAME" property="username"/>
			<result column="NAME" property="name"/>
			<result column="EMAIL" property="email"/>
			<result column="PHONE" property="phone"/>
			<result column="STATUS" property="status"/>
			<association property="memberFilesVO" javaType="MemberFilesVO">
				<id column="FILENUM" property="fileNum"/>
				<result column="FILENAME" property="fileName"/>
				<result column="ORINAME" property="oriName"/>
			</association>
		</collection>
  </resultMap>
  
  	<!-- 강의실 관리 -->
    
    <!-- 강의실 조회 -->
	<select id="getLectureRoomList" parameterType="Pagination" resultType="LectureRoomVO">
		SELECT * FROM LECTURE_ROOM
		LIMIT #{startRow},#{perPage}
	</select>
  
  	<select id="getTotalCountLectureRoom" resultType="Long">
  		SELECT COUNT(LECTUREROOM) FROM LECTURE_ROOM
  	</select>
 	<!-- 강의실 등록 -->
 	<insert id="setLectureRoomAdd" parameterType="LectureRoomVO">
 		INSERT INTO LECTURE_ROOM
 		VALUES(#{lectureBuilding},#{lectureRoom},#{personal},1)
 	</insert>
 	<select id="getLectureBuilding" resultType="LectureRoomVO">
 		SELECT DISTINCT LECTUREBUILDING 
		FROM LECTURE_ROOM 
 	</select>
 	<!--강의실 중복 체크 -->
 	<select id="LectureRoomDuplicateCheck" parameterType="LectureRoomVO" resultType="LectureRoomVO">
 		SELECT LECTUREBUILDING,LECTUREROOM 
		FROM LECTURE_ROOM 
		WHERE LECTUREBUILDING =#{lectureBuilding} AND LECTUREROOM = #{lectureRoom}
 	</select>
 	<!--강의실 수정 -->
 	<update id="setLectureRoomUpdate" parameterType="LectureRoomVO">
 		UPDATE LECTURE_ROOM
 		SET STATUS=#{status}
 		WHERE LECTUREBUILDING = #{lectureBuilding} AND LECTUREROOM = #{lectureRoom}
 	</update>
  
  <!--학과 관리  -->
  
  <!--학과 조회 -->
  	<select id="getDepartmentList" parameterType="Pagination" resultMap="DepartmentList">
  		SELECT * FROM DEPARTMENT D
			INNER JOIN 
				COLLEGE C 
			USING(COLLEGENUM)
  		LIMIT #{startRow},#{perPage}
  	</select>
  	<resultMap type="CollegeVO" id="DepartmentList">
  		<result column="COLLEGENAME" property="collegeName"/>
  		<collection property="departmentVOs" javaType="List" ofType="DepartmentVO">
  			<id column="DEPTNUM" property="deptNum"/>
  			<result column="DEPTNAME" property="deptName"/>
  			<result column="STATUS" property="status"/>
  		</collection>
  	</resultMap>
  	
  	<select id="getTotalCountDepartment" resultType="Long">
  		SELECT COUNT(DEPTNUM) FROM DEPARTMENT
  	</select>
  	
  <!--학과 수정 -->
  <update id="setDepartmentUpdate" parameterType="DepartmentVO">
  	UPDATE DEPARTMENT
  	SET STATUS=#{status}
  	WHERE DEPTNUM=#{deptNum}
  </update>
  
  <!--학과 등록 -->
  <insert id="setDepartmentAdd" parameterType="DepartmentVO">
  	INSERT INTO DEPARTMENT 
	VALUES(#{deptNum},#{collegeNum},#{deptName},#{status})
  </insert>	
  
  <!--기간 설정  -->
  <insert id="setPeriodAdd" parameterType="PeriodVO">
  	INSERT INTO PERIOD
  	VALUES(#{year},#{semester},#{applicationStart},#{applicationEnd},#{favoriteStart},#{favoriteEnd},#{deadline})
  	
  </insert>
  
  <!--강의 목록 조회  -->
  <select id="getLectureList" resultType="LectureVO">
  	SELECT * FROM LECTURE

  </select>  
  	
  </mapper>