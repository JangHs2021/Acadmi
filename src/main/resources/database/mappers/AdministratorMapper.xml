<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.acadmi.administrator.AdminIstratorDAO">
  
  <sql id="studentSearch">
  	<where>
  		<if test="kind == username">
  			USERNAME LIKE CONCAT('%', #{search}, '%')
  		</if>
  		<if test="kind == name">
  			NAME LIKE CONCAT('%', #{search}, '%')
  		</if>
  		<if test="kind == grade">
  			GRADE LIKE CONCAT('%', #{search}, '%')
  		</if>
  		<if test="kind == status">
  			S.STATUS LIKE CONCAT('%',#{search},'%')
  		</if>
  		<if test="kind == "></if>
  		
  		<if test="kind == deptName">
  			DEPTNAME LIKE CONCAT('%', #{search} ,'%')
  		</if>
  	</where>
  </sql>
  
  	<select id="getTotalCountStudent" resultType="Long">
  		SELECT COUNT(USERNAME) FROM STUDENT
  	</select>
  	
  	<select id="getTotalCountProfessor" resultType="Long">
  		SELECT COUNT(USERNAME) FROM PROFESSOR
  	</select>
  	
  	<select id="getTotalCountAdminIstrator" resultType="Long">
  		SELECT COUNT(USERNAME) FROM ADMINISTRATOR
  	</select>
  
  	<select id="getStudentList" parameterType="Pagination" resultMap="StudentList">
  		SELECT * FROM MEMBER M
		LEFT OUTER JOIN
			MEMBERFILES MF
		USING(USERNAME)
			INNER JOIN
				STUDENT S 
			USING(USERNAME)
				INNER JOIN
					DEPARTMENT D 
				USING(DEPTNUM)
					INNER JOIN 
						COLLEGE C 
					USING(COLLEGENUM)
		WHERE CATEGORY=2			
		LIMIT #{startRow},#{perPage}					
  	</select>
  	<resultMap type="CollegeVO" id="StudentList">
  		<id column="COLLEGENUM" property="collegeNum"/>
  		<result column="COLLEGENAME" property="collegeName"/>
  		<collection property="departmentVOs" javaType="List" ofType="DepartmentVO">
  			<id column="DEPTNUM" property="deptNum"/>
  			<result column="DEPTNAME" property="deptName"/>
  			<collection property="studentVOs" javaType="List" ofType="StudentVO">
  				<id column="USERNAME" property="username"/>
  				<result column="GRADE" property="grade"/>
  				<result column="NAME" property="name"/>
  				<result column="PHONE" property="phone"/>
  				<result column="STATUS" property="status"/>
  				<collection property="memberFilesVOs" javaType="List" ofType="MemberFilesVO">
  					<id column="FILENUM" property="fileNum"/>
  					<result column="FILENAME" property="fileName"/>
  					<result column="ORINAME" property="oriName"/>
  				</collection>
  			</collection>
  		</collection>
  	</resultMap>
  	
  	<select id="getProfessorList" resultMap="ProfessorList">
  		SELECT * FROM MEMBER M
		LEFT OUTER JOIN
			MEMBERFILES MF 
		USING(USERNAME)
			INNER JOIN
				PROFESSOR P 
		USING(USERNAME)
				INNER JOIN 
					DEPARTMENT D 
				USING(DEPTNUM)
					INNER JOIN
						COLLEGE C
					USING(COLLEGENUM)
		WHERE CATEGORY=1			
		LIMIT #{startRow},#{perPage}			
  	</select>
  	<resultMap type="CollegeVO" id="ProfessorList">
  		<id column="COLLEGENUM" property="collegeNum"/>
  		<result column="COLLEGENAME" property="collegeName"/>
  		<result column="BUILDING" property="building"/>
  		<collection property="departmentVOs" javaType="List" ofType="DepartmentVO">
  			<id column="DEPTNUM" property="deptNum"/>
  			<result column="DEPTNAME" property="deptName"/>
  			<collection property="professorVOs" javaType="List" ofType="ProfessorVO">
  				<result column="NAME" property="name"/>
  				<result column="EMAIL" property="email"/>
  				<result column="PHONE" property="phone"/>
  				<result column="PROFESSORROOM" property="professorRoom"/>
  				<result column="STATUS" property="status"/>
  				<collection property="memberFilesVOs" javaType="List" ofType="MemberFilesVO">
  					<id column="FILENUM" property="fileNum"/>
  					<result column="FILENAME" property="fileName"/>
  					<result column="ORINAME" property="oriName"/>
  				</collection>
  			</collection>
  		</collection>
  	</resultMap>
  
  <select id="getAdminIstratorList" resultMap="AdminIstratorList">
  	SELECT * FROM MEMBER M
		LEFT OUTER JOIN
			MEMBERFILES MF 
		USING(USERNAME)
			INNER JOIN
				ADMINISTRATOR A
			USING(USERNAME)
				INNER JOIN 
					DEPARTMENT D 
				USING(DEPTNUM)
	WHERE CATEGORY=0			
	LIMIT #{startRow},#{perPage}			
  </select>
  
  <resultMap type="DepartmentVO" id="AdminIstratorList">
  	<id column="DEPTNUM" property="deptNum"/>
  	<result column="DEPTNAME" property="deptName"/>
		<collection property="adminIstratorVOs" javaType="List" ofType="AdminIstratorVO">
			<result column="NAME" property="name"/>
			<result column="EMAIL" property="email"/>
			<result column="PHONE" property="phone"/>
			<result column="STATUS" property="status"/>
			<collection property="memberFilesVOs" javaType="List" ofType="MemberFilesVO">
				<id column="FILENUM" property="fileNum"/>
				<result column="FILENAME" property="fileName"/>
				<result column="ORINAME" property="oriName"/>
			</collection>
		</collection>
  </resultMap>
  
    <insert id="setMemberInsert" parameterType="MemberVO">
  		INSERT INTO MEMBER
  		VALUES(#{username}, #{password},#{email},#{category},#{enabled})
  	</insert>
  	
  	<insert id="setStudentInsert" parameterType="StudentVO">
  		INSERT INTO STUDENT
  		VALUES(#{username},#{deptNum},#{grade},#{name},#{phone},now(),#{address},#{status})
  	</insert>
  	
  	<insert id="setProfessorInsert" parameterType="ProfessorVO">
  		INSERT INTO PROFESSOR
  		VALUES(#{username},#{deptNum},#{name},#{professorRoom},#{phone},now(),#{address},#{status})
  	</insert>
  	
  	<insert id="setAdminIstratorInsert" parameterType="AdminIstratorVO">
  		INSERT INTO ADMINISTRATOR
  		VALUES(#{username},1,#{name},01044444444,now(),'서울',1)
  	</insert>
  	
  	<select id="getMember" resultType="MemberVO">
  		SELECT USERNAME FROM MEMBER
  	</select>
  </mapper>