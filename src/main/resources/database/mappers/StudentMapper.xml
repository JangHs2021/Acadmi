<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  
  <mapper namespace="com.acadmi.student.StudentDAO">

 	<!--내 수강 강좌 -->
 	<select id="getMyLectureList" parameterType="lectureVO" resultMap="MyLectureList">
 		SELECT L.*,SL.*,P.*,S.* FROM LECTURE L
			LEFT OUTER JOIN 
				STUDENT_LECTURE SL 
			ON L.LECTURENUM = SL.LECTURENUM
				INNER JOIN 
					STUDENT S 
				ON S.USERNAME = SL.USERNAME
					INNER JOIN 
						PROFESSOR P
		WHERE S.USERNAME = #{username}
		<if test="year !=null and !year.equals('')">
			AND L.YEAR = #{year}
		</if>
		<if test="semester !=null and !semester.equals('')">
			AND L.SEMESTER=#{semester}
		</if>
 	</select>
 	<resultMap type="LectureVO" id="MyLectureList">
 		<id column="LECTURENUM" property="lectureNum"/>
 		<result column="USERNAME" property="username"/>
 		<result column="LECTURENAME" property="lectureName"/>
 		<result column="YEAR" property="year"/>
 		<result column="SEMESTER" property="semester"/>
 		<result column="CATEGORY" property="category"/>
 		<result column="SUBSCRIPTION" property="subscription"/>
 		<association property="studentLectureVO" javaType="StudentLectureVO">
 			<result column="USERNAME" property="username"/>
 		</association>
 		<association property="studentVO" javaType="StudentVO">
 			<result column="USERNAME" property="username"/>
 		</association>
 		<association property="professorVO" javaType="ProfessorVO">
 			<result column="NAME" property="name"/>
 		</association>

 	</resultMap>
 	
 	<!--내 성적 조회  -->
 	<select id="getMyCreditList" parameterType="lectureVO" resultMap="myCreditList">
	 	SELECT L.*,SL.*,C.*,P.* FROM LECTURE L
			RIGHT OUTER JOIN 
				STUDENT_LECTURE SL 
			ON L.LECTURENUM = SL.LECTURENUM
					RIGHT OUTER JOIN 
						CREDIT C
					ON SL.LECTURENUM = C.LECTURENUM 
						INNER JOIN 
							PROFESSOR P
		WHERE SL.USERNAME=#{username}
		<if test="year !=null and !year.equals('')">
			AND L.YEAR = #{year}
		</if>
		<if test="semester !=null and !semester.equals('')">
			AND L.SEMESTER=#{semester}
		</if>
 	</select>
 	
 	
 	
 	<resultMap type="LectureVO" id="myCreditList">
 		<id column="LECTURENUM" property="lectureNum"/>
 		<result column="LECTURENAME" property="lectureName"/>
 		<result column="CATEGORY" property="category"/>
 		<result column="YEAR" property="year"/>
 		<result column="SEMESTER" property="semester"/>
 		
 		<association property="studentLectureVO" javaType="StudentLectureVO">
 			<association property="creditVO" javaType="CreditVO">
 				<result column="CREDIT" property="credit"/>
 			</association>
 		</association>
 		<association property="professorVO" javaType="ProfessorVO">
 			<id column="USERNAME" property="username"/>
 			<result column="NAME" property="name"/>
 		</association>
 		
 	</resultMap>
 	
 	<!-- 입학년도 ~ 재학년도-->
	<select id="getMaxYear" parameterType="LectureVO" resultType="Integer">
		SELECT MAX(L.YEAR) AS YEAR  FROM LECTURE L
			LEFT OUTER JOIN
				STUDENT_LECTURE SL 
			ON L.LECTURENUM=SL.LECTURENUM
				INNER JOIN 
					STUDENT S 
		WHERE S.USERNAME = #{username}
	</select>
	
	<select id="getMinYear" parameterType="lectureVO" resultType="Integer">
		SELECT MIN(L.YEAR) AS YEAR  FROM LECTURE L
			LEFT OUTER JOIN
				STUDENT_LECTURE SL 
			USING(LECTURENUM)
				INNER JOIN 
					STUDENT S 
		WHERE S.USERNAME = #{username}
	</select>

	<!--강의 메안페이지  -->
<!-- 	<select id="getLectureDetail" parameterType="LectureVO" resultType="">
		SELECT * FROM CLASS C
			RIGHT OUTER JOIN
				SYLLABUS S 
			ON C.SYLLABUSNUM  = S.SYLLABUSNUM
				LEFT OUTER JOIN 
					LECTURE L 
				ON S.LECTURENUM = L.LECTURENUM
					INNER JOIN 
						PROFESSOR P 
					ON L.DEPTNUM = P.DEPTNUM
		WHERE L.LECTURENUM = #{lectureNum}
	</select> -->
	
	<!-- 메인페이지 공지사항 출력 -->
	<select id="getNoticeList" resultType="BoardVO">
		SELECT * FROM NOTICE
		ORDER BY NUM DESC 
		LIMIT 5
	</select>
  	
  </mapper>