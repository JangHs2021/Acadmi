<?xml version="1.0" encoding="UTF-8"?>
<!-- Schema 추가 -->
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.acadmi.chat.ChatDAO">
  	
  	<sql id="search">
  		<if test="kind == 'roomRecipient'">
  			AND ROOMRECIPIENT LIKE CONCAT('%', #{search}, '%')
  		</if>
  		<if test="kind == 'recipientName'">
  			AND RECIPIENTNAME LIKE CONCAT('%', #{search}, '%')
  		</if>
  	</sql>
  	
  		<!-- select -->
  		
  	<!-- 채팅방 목록 list -->
  	<select id="getChatRoomList" parameterType="pagination" resultMap="getChatRoomResult">
  		SELECT * FROM CHAT_ROOM CR
  				 LEFT JOIN MEMBERFILES MF
  				 ON(CR.ROOMRECIPIENT = MF.USERNAME)
  				 LEFT JOIN CHAT_MESSAGE CM
  				 ON(CR.CHATNUM = CM.CHATNUM)
  				 LEFT JOIN CHATFILES CF
  				 ON(CM.MSGNUM = CF.MSGNUM)
  		WHERE CR.ROOMSENDER = #{username}
  		<include refid="search"></include>
  		ORDER BY CHATSTATUS ASC ,CM.MSGDATE DESC
  	</select>
  	
  	<resultMap type="ChatRoomVO" id="getChatRoomResult">
  		<id column="CHATNUM" property="chatNum"/>
  		<result column="ROOMSENDER" property="roomSender"/>
  		<result column="ROOMRECIPIENT" property="roomRecipient"/>
  		<result column="SENDERNAME" property="senderName"/>
  		<result column="RECIPIENTNAME" property="recipientName"/>
  		<result column="CHATSTATUS" property="chatStatus"/>
  		<association property="memberFilesVO" javaType="MemberFilesVO">
  			<id column="FILENUM" property="fileNum"/>
  			<result column="USERNAME" property="username"/>
  			<result column="FILENAME" property="fileName"/>
  			<result column="ORINAME" property="oriName"/>
  		</association>
  		<collection property="chatMessageVOs" javaType="List" ofType="ChatMessageVO">
  			<id column="MSGNUM" property="msgNum"/>
  			<result column="MSGSENDER" property="msgSender"/>
  			<result column="MSGRECIPIENT" property="msgRecipient"/>
  			<result column="MSGCONTENTS" property="msgContents"/>
  			<result column="MSGDATE" property="msgDate"/>
  			<result column="MSGSTATUS" property="msgStatus"/>
  			<association property="chatFilesVO" javaType="ChatFilesVO">
  				<id column="CHATFILENUM" property="chatFileNum"/>
  				<result column="FILENAME" property="fileName"/>
  				<result column="ORINAME" property="oriName"/>
  			</association>
  		</collection>
  	</resultMap>
  	
  	<!-- 채팅방의 메세지들을 뽑아오는 것 -->
  	<select id="getChatRoom" parameterType="ChatRoomVO" resultMap="getChatMessageResult">
  		SELECT * FROM CHAT_ROOM CR
				 LEFT JOIN CHAT_MESSAGE CM
				 ON(CR.CHATNUM=CM.CHATNUM)
				 LEFT JOIN MEMBERFILES MF
				 ON(CM.MSGSENDER=MF.USERNAME)
				 LEFT JOIN CHATFILES CF
				 ON(CM.MSGNUM=CF.MSGNUM)
		WHERE CR.ROOMSENDER = #{roomSender} AND CR.ROOMRECIPIENT = #{roomRecipient}
		ORDER BY MSGDATE ASC
  	</select>
  	
  	<resultMap type="ChatRoomVO" id="getChatMessageResult">
  		<id column="CHATNUM" property="chatNum"/>
  		<result column="ROOMSENDER" property="roomSender"/>
  		<result column="ROOMRECIPIENT" property="roomRecipient"/>
  		<result column="SENDERNAME" property="senderName"/>
  		<result column="RECIPIENTNAME" property="recipientName"/>
  		<result column="CHATSTATUS" property="chatStatus"/>
  		<collection property="chatMessageVOs" javaType="List" ofType="ChatMessageVO">
  			<id column="MSGNUM" property="msgNum"/>
  			<result column="MSGSENDER" property="msgSender"/>
  			<result column="MSGRECIPIENT" property="msgRecipient"/>
  			<result column="MSGCONTENTS" property="msgContents"/>
  			<result column="MSGDATE" property="msgDate"/>
  			<result column="MSGSTATUS" property="msgStatus"/>
  			<association property="memberFilesVO" javaType="MemberFilesVO">
	  			<id column="FILENUM" property="fileNum"/>
	  			<result column="USERNAME" property="username"/>
	  			<result column="FILENAME" property="fileName"/>
	  			<result column="ORINAME" property="oriName"/>
	  		</association>
	  		<association property="chatFilesVO" javaType="ChatFilesVO">
  				<id column="CHATFILENUM" property="chatFileNum"/>
  				<result column="FILENAME" property="fileName"/>
  				<result column="ORINAME" property="oriName"/>
  			</association>
  		</collection>
  	</resultMap>
  	
  	<!-- msgNum 출력 -->
  	<select id="getMsgNum" parameterType="Long" resultType="Long">
  		SELECT MSGNUM FROM CHAT_MESSAGE WHERE CHATNUM = #{chatNum} ORDER BY MSGNUM DESC LIMIT 1
  	</select>
  	
  	<!-- file정보 출력 -->
  	<select id="getFileDetail" parameterType="ChatFilesVO" resultType="ChatFilesVO">
  		SELECT * FROM CHATFILES WHERE CHATFILENUM = #{chatFileNum}
  	</select>
  	
  	<!-- 이름을 뽑아오기 위한 select -->
  	
  	<select id="getMemberDetail" parameterType="MemberVO" resultType="MemberVO">
  		SELECT * FROM MEMBER WHERE USERNAME = #{username}
  	</select>
  	
  	<select id="getAdministratorName" parameterType="MemberVO" resultType="AdministratorVO">
  		SELECT * FROM ADMINISTRATOR WHERE USERNAME = #{username}
  	</select>
  	
  	<select id="getProfessorName" parameterType="MemberVO" resultType="ProfessorVO">
  		SELECT * FROM PROFESSOR WHERE USERNAME = #{username}
  	</select>
  	
  	<select id="getStudentName" parameterType="MemberVO" resultType="StudentVO">
  		SELECT * FROM STUDENT WHERE USERNAME = #{username}
  	</select>
  	
  	<!-- 새로온 메세지 표시를 위한 select -->
  	<select id="getChatList" parameterType="ChatRoomVO" resultType="ChatRoomVO">
  		SELECT * FROM CHAT_ROOM
  		WHERE ROOMSENDER = #{roomSender} AND CHATSTATUS = 0
  	</select>
  	
  		<!-- insert -->
  	
  	<!-- 채팅방 만들기 -->
  	<!-- sender -->
  	<insert id="setSenderChatRoom" parameterType="ChatRoomVO">
  		INSERT INTO CHAT_ROOM
  		VALUES (0, #{roomSender}, #{roomRecipient}, #{senderName}, #{recipientName}, 1)
  	</insert>
  	
  	<!-- recipient -->
  	<insert id="setRecipientChatRoom" parameterType="ChatRoomVO">
  		INSERT INTO CHAT_ROOM
  		VALUES (0, #{roomRecipient}, #{roomSender}, #{recipientName}, #{senderName}, 0)
  	</insert>
  	
  	<!-- 메세지 입력 -->
  	<insert id="setSaveMessage" parameterType="ChatMessageVO" useGeneratedKeys="true" keyProperty="msgNum">
  		INSERT INTO CHAT_MESSAGE
  		VALUES (0, #{msgSender}, #{msgRecipient}, #{msgContents}, now(), #{msgStatus}, #{chatNum})
  	</insert>
  	
  	<!-- 파일 저장 -->
  	<insert id="setChatFileAdd" parameterType="ChatFilesVO">
  		INSERT INTO CHATFILES
  		VALUES (0, #{msgNum}, #{fileName}, #{oriName})
  	</insert>
  	
  		<!-- update -->
  	
  	<!-- 채팅방 상태 변경 -->
  	<update id="setChatRoomUpdate" parameterType="ChatRoomVO">
  		UPDATE CHAT_ROOM SET CHATSTATUS = #{chatStatus}, ROOMRECIPIENT = #{roomRecipient} WHERE CHATNUM = #{chatNum}
  	</update>
  	
  	<!-- 내 채팅방 메세지 상태 변경 -->
  	<update id="setMyChatMessageUpdate" parameterType="ChatMessageVO">
  		UPDATE CHAT_MESSAGE SET MSGSTATUS = 1 WHERE CHATNUM = #{chatNum} AND MSGSENDER = #{msgRecipient}
  	</update>
  	
  	<!-- 상대 채팅방 메세지 상태 변경 -->
  	<update id="setYourChatMessageUpdate">
  		UPDATE CHAT_MESSAGE SET MSGSTATUS = 1 WHERE CHATNUM = #{chatNum} AND MSGRECIPIENT = #{msgSender}
  	</update>
  	
  		<!-- delete -->
  	
  	<!-- 채팅방 나가기 -->
  	<delete id="setChatRoomDelete" parameterType="chatRoomVO">
  		DELETE FROM CHAT_ROOM WHERE CHATNUM = #{chatNum}
  	</delete>
  	
  	<!-- 메세지 지우기 -->
  	<delete id="setDeleteMessage" parameterType="ChatMessageVO">
  		DELETE FROM CHAT_MESSAGE WHERE MSGNUM = #{msgNum}
  	</delete>
  
  </mapper>